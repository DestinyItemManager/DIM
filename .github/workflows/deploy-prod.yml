name: Deploy Prod

on:
  workflow_dispatch:
    inputs:
      patch:
        description: 'Should this be a patch release?'
        required: true
        default: 'true'
  schedule:
    # Deploy at 5pm Sunday PST, which is 1am Monday UTC
    # * is a special character in YAML so you have to quote this string
    - cron:  '0 1 * * 1'

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install SSH key
        uses: shimataro/ssh-key-action@v2
        with:
          key: ${{ secrets.SSH_KEY }}
          name: dim.rsa
          known_hosts: ${{ secrets.REMOTE_HOST }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # So packtracker can get the previous commit
          # Use the dim-release-bot token rather than the default
          token: ${{ secrets.GH_TOKEN }}

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock')}}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Build and deploy
        run: ./build/deploy-prod.sh
        env:
          WEB_API_KEY: ${{ secrets.PROD_API_KEY }}
          WEB_OAUTH_CLIENT_ID: ${{ secrets.PROD_OAUTH_CLIENT_ID }}
          WEB_OAUTH_CLIENT_SECRET: ${{ secrets.PROD_OAUTH_CLIENT_SECRET }}
          DIM_API_KEY: ${{ secrets.PROD_DIM_API_KEY }}
          CLOUDFLARE_KEY: ${{ secrets.CLOUDFLARE_KEY }}
          CLOUDFLARE_EMAIL: ${{ secrets.CLOUDFLARE_EMAIL }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: app.destinyitemmanager.com
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          # Use the dim-release-bot token rather than the default
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          PATCH: ${{ github.event.inputs.patch }}

      - name: Publish Sentry release
        run: ./build/sentry-release-prod.sh
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}