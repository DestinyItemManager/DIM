name: PR Build

# While this is intended for PR's we are using a push event as
# packtracker needs to be run on every push.
on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/checkout@v2
        with:
          fetch-depth: 3 # So packtracker can get the previous commit

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock')}}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Cache eslint
        uses: actions/cache@v2
        env:
          cache-name: cache-eslint
        with:
          path: ~/.eslintcache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.eslintrc') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('.eslintrc') }}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Test
        run: yarn test

      - name: Lint check
        run: |
          find . -type d -name "node_modules" -prune -o -type f -iregex '.*.ts\|.*.js\|.*.tsx\|.*.jsx' -exec ./build/set-mtime-to-md5.sh {} \;
          yarn run lint-check


      - name: Generate Packtracker ENV vars
        env:
            BRANCH_NAME: ${{ github.event.pull_request.head.ref }}
            COMMIT_SHA: ${{ github.event.pull_request.head.sha }}
        shell: bash
        run: |
          echo "$(git log --all --decorate --oneline --graph -n 10)";
          echo "PT_BRANCH=$BRANCH_NAME" >> $GITHUB_ENV;
          echo "PT_COMMIT=$COMMIT_SHA" >> $GITHUB_ENV;
          echo "PT_AUTHOR=$(git log --format="%aE" -n 1 $COMMIT_SHA)" >> $GITHUB_ENV;
          echo "PT_MESSAGE=$(git log --format="%B" -n 1 $COMMIT_SHA)" >> $GITHUB_ENV;
          echo "PT_COMMITTED_AT=$(git log --format="%ct" -n 1 $COMMIT_SHA)" >> $GITHUB_ENV;
          echo "PT_PRIOR_COMMIT=$(git rev-parse $COMMIT_SHA^)" >> $GITHUB_ENV;



      # We set the default packtracker ENV vars
      - name: Build beta
        run: yarn run build-beta
