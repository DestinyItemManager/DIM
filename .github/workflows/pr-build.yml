name: PR Build

on: [push, pull_request_target]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - uses: actions/checkout@v2
        with:
          fetch-depth: 2 # So packtracker can get the previous commit

      - name: Cache node_modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node_modules
        with:
          path: node_modules
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock')}}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock')}}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Cache eslint
        uses: actions/cache@v2
        env:
          cache-name: cache-eslint
        with:
          path: ~/.cache
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/eslint.json') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/eslint.json') }}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

      - name: Cache yarn
        uses: actions/cache@v2
        env:
          cache-name: cache-yarn
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/yarn.lock') }}
            ${{ runner.os }}-${{ env.cache-name }}-

      - name: Install
        run: yarn install --frozen-lockfile --prefer-offline

      - name: Test
        run: yarn test

      - name: Lint check
        run: |
          find . -type d -name "node_modules" -prune -o -type f -iregex '.*.ts\|.*.js\|.*.tsx\|.*.jsx' -exec ./build/set-mtime-to-md5.sh {} \;
          yarn run lint-check

      - name: Build beta
        run: yarn run build-beta
        env:
          PT_PROJECT_TOKEN: ${{ secrets.PT_PROJECT_TOKEN }}
