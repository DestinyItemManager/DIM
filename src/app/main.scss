// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
// DIM Main stylesheet
//
// The main stylesheet for all of the styles!
//
// Prefer CSS modules, or at least stylesheets that are impored directly by the components that need them, to putting things here.
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
@import 'variables.scss';

:root {
  // Item width including border
  --item-size: 50px;
  // Margin on the bottom and right of an item
  --item-margin: 6px;
  // Padding at the ends of inventory column
  --inventory-column-padding: 12px;
  // ultimately user-determined. default values here
  --num-characters: 3;
  --tiles-per-char-column: 3;
  // equipped item plus character's inventory
  --character-column-width: calc(
    (var(--tiles-per-char-column) + 1) * (var(--item-size) + var(--item-margin))
  );
  // used for phone protrait mode
  --column-padding: calc(2 * var(--inventory-column-padding) - var(--item-margin));
  // prevents content shift with persistent scroll-y bar
  overflow-y: scroll;
}

@media (max-width: 1025px) {
  :root {
    --item-size: 48px;
  }
}

@include phone-portrait {
  :root {
    --item-margin: 10px;
    // Padding at the ends of inventory column
    --inventory-column-padding: 12px;
    /* prettier-ignore */
    --item-size: calc(
      (
          100vw -
          var(--column-padding) -
          #{$equipped-item-total-outset} -
          var(--combined-item-margins)
        ) / (var(--tiles-per-char-column) + 1)
    ) !important;
    --column-padding: calc(2 * var(--inventory-column-padding) - var(--item-margin));
    --combined-item-margins: calc(var(--item-margin) * (var(--tiles-per-char-column) + 1));
    // sets scroll bar back to auto as the content shift an issue at this size.
    overflow-y: auto;
  }

  .char-cols-3 {
    --item-margin: 15px;
    // Padding at the ends of inventory column
    --inventory-column-padding: 34px;
    // this is duplicated for .char-cols-3 to recalculate using local var adjustments
    /* prettier-ignore */
    --item-size: calc(
      (
        100vw -
        var(--column-padding) -
        #{$equipped-item-total-outset} -
        var(--combined-item-margins)
      ) / (var(--tiles-per-char-column) + 1)
    ) !important;
    --column-padding: calc(2 * var(--inventory-column-padding) - var(--item-margin));
    --combined-item-margins: calc(var(--item-margin) * (var(--tiles-per-char-column) + 1));
  }
}

// Suppress outline on focusable divs
div[tabindex='-1']:focus {
  outline: 0;
}

h1,
h2,
h3,
h4,
h5 {
  font-weight: normal;
}

label {
  cursor: inherit;
}

div:focus,
span:focus {
  outline-width: 0;
}

@keyframes browser-warning {
  to {
    opacity: 0;
    visibility: hidden;
  }
}
#browser-warning {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  background: #990000;
  padding: 8px;
  text-align: center;
  &.hidden {
    display: none;
  }
  animation: 1s linear 10s forwards browser-warning;
}

/**
  Misc DIM page
 **/
.dim-page {
  // non-inventory page settings
  max-width: 900px;
  margin: 0 auto;
}

// Use this to make images not tappable (Android Chrome will show a download menu)
.no-pointer-events {
  pointer-events: none;
}

.currency img {
  vertical-align: text-bottom;
  height: 16px;
  width: 16px;
}

dt {
  font-style: italic;
  font-weight: bold;
  margin-top: 8px;
}

dd {
  margin: 3px 20px;
}

a {
  color: #ddd;
  cursor: pointer;
  text-decoration: underline;
}

h2,
h3 {
  margin-top: 20px;
  margin-bottom: 15px;
}

html,
body {
  // Disable pull to refresh in Android
  overscroll-behavior: none;
}

body {
  margin: 0 auto;
  background-color: #313233;
  color: white;
  font-family: 'Open Sans', sans-serif;
  font-size: 12px;
  // Disable drag and drop so we can use our polyfill
  -webkit-user-drag: none;
}

#system {
  outline: none;
  background-color: #fafafa;
  float: right;
  cursor: pointer;
  option {
    cursor: pointer;
  }
}

input,
select,
option {
  font-family: 'Open Sans', sans-serif;
}

input[type='search'] {
  -webkit-appearance: textfield;
}

.drag-help {
  font-size: 1.5em;
  position: fixed;
  backface-visibility: hidden;
  bottom: 2em;
  transition: transform 0.5s, opacity 0.5s, background-color 0.1s;
  background-color: rgba(0, 0, 0, 0.8);
  left: calc(50% - 15em);
  width: 30em;
  right: 0;
  border-radius: 0.5em;
  text-align: center;
  padding: 0.5em;
  color: #e0e0e0;
  &.drag-shift-activated {
    background-color: rgba(0, 60, 0, 0.8);
  }
}

.drag-help-hidden {
  transform: translateY(5em);
  opacity: 0;
}

#content {
  margin: 0 auto;
  user-select: none;
  padding-left: constant(safe-area-inset-left);
  padding-left: env(safe-area-inset-left);
  padding-right: constant(safe-area-inset-right);
  padding-right: env(safe-area-inset-right);
  scroll-margin-top: $header-height;
}

#content.isdesktop {
  margin-bottom: 101px;
}

h2,
h3,
h4 {
  font-weight: 400;
}

.drag-enter {
  background-color: rgba(255, 255, 255, 0.1);
}

.drag-hover {
  background-color: rgba(255, 255, 255, 0.2);
}

.close {
  width: 16px;
  height: 16px;
  display: inline-block;
  position: absolute;
  top: 2px;
  right: calc(2px + var(--item-margin));
  background-image: url('../images/close.png');
  background-size: 16px 16px;
  background-color: rgba(100, 100, 100, 0.8);
  &:hover {
    background-color: rgba(0, 0, 0, 1);
  }
}

.disabled {
  opacity: 0.5;
}

.support h2 {
  margin-top: 1em;
  margin-bottom: 0.25em;
}

.fineprint {
  font-size: 0.85em;
  color: #aaa;
}

.overflow-dots {
  overflow: hidden;
  text-overflow: ellipsis;
  &:hover {
    overflow: visible;
  }
}

.stylizedAnchor {
  text-decoration: none;
}

.warning-block {
  color: white;
  background: $red;
  padding: 0.5em 1em;
  display: inline-block;
}

/* Forms */

textarea {
  width: 100%;
  height: 30px;
  background-color: #333;
  padding: 4px 8px;
  border: none;
  outline: none;
  color: white;
  box-sizing: border-box;
}
textarea.textarea-error {
  margin: 5px 10px;
  white-space: pre-wrap;
  color: #cc6666;
  width: 100%;
  text-align: right;
}

select {
  background: #555;
  border: none;
  color: white;
}

/* Button */

.dim-button {
  cursor: pointer;
  background-color: #555;
  padding: 4px 10px;
  display: inline-block;
  border: none;
  color: white;
  font-size: 12px;
  font-family: 'Open Sans', sans-serif;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.25);
  border-radius: 2px;
  &:hover {
    background-color: $orange;
  }
  &:active,
  &.selected {
    box-shadow: none;
    background-color: $orange;
  }
  input {
    display: none;
  }

  &[disabled] {
    opacity: 0.5;
    cursor: not-allowed;
    &:hover {
      background-color: #555;
    }
  }
  img {
    height: 1.3em;
    width: auto;
    vertical-align: bottom;
    margin: 0 0.3em;
    filter: drop-shadow(0 0 1px black);
  }
  &.danger {
    &:hover {
      background-color: $red;
    }
  }
}

a.dim-button {
  text-decoration: none;
}

.split-buttons {
  .dim-button {
    border-radius: 0;
    border-right: 1px solid #999;
    margin: 0;

    &:first-child {
      border-top-left-radius: 2px;
      border-bottom-left-radius: 2px;
    }
    &:last-child {
      border-top-right-radius: 2px;
      border-bottom-right-radius: 2px;
      border-right: 0;
    }
  }
}

.check-button {
  background-color: #555;
  border-radius: 2px;
  border: none;
  box-sizing: border-box;
  color: white;
  cursor: pointer;
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  font-family: 'Open Sans', sans-serif;
  font-size: 12px;
  margin-bottom: 4px;
  margin-right: 4px;
  padding: 4px 6px 4px 10px;
  text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.25);

  &:hover {
    background-color: $orange;
  }

  &:active {
    box-shadow: none;
    background-color: $orange;
  }

  .app-icon {
    margin: auto 0 auto 4px;
  }
}

.app {
  &::before {
    @include below-header;
    background: $gradient;
    background-position: center top;
    background-repeat: no-repeat;
    content: '';
    left: 0;
    right: 0;
    bottom: 0;
    position: fixed;
    will-change: transform;
    z-index: -1;
  }
  @media (min-width: 1440px) {
    --inventory-column-padding: 24px;
    --column-padding: calc(2 * var(--inventory-column-padding) - var(--item-margin));
  }
  @include phone-portrait {
    --inventory-column-padding: 12px;
  }
}
