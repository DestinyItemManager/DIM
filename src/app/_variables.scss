// Variables and mixins that can be used from any SCSS file

// DIM orange and blue, accent colors
$orange: #e8a534;
$blue: #68a0b7;
$red: #ff3232; // For warnings/errors
$gradient: radial-gradient(
  circle at 50% 70px,
  hsl(240, 20%, 28%) 0%,
  hsl(240, 27%, 12%) 100%
); // new background gradient

// Elemental damage types
$arc: #85c5ec;
$solar: #f2721b;
$void: #814bcf;

// Item rarities
$common: #dcdcdc;
$uncommon: #366e42;
$rare: #5076a3;
$legendary: #513065;
$exotic: #c3a019;

// The color of XP bars
$xp: #5ea16a;
// Border for completed items/quests/bounties
$gold: #f5dc56;
$power: $gold;

// Color of the item border for masterworks
$masterwork-border-color: #eade8b;
$crafted-border-color: #d25336;

// Item tiles' border
$item-border-width: 1px;

// Border around equipped items
$equipped-item-border: 1px;
$equipped-item-padding: 2px;
$equipped-item-total-outset: #{2 * ($equipped-item-border + $equipped-item-padding)};

// Full tile size including borders
$badge-font-size: '(var(--item-size) / 5)';
$badge-height: '(#{$badge-font-size} + 4px)';

// The height of our "issue banner" for charities/causes
$issue-banner-height: 101px;

// A mixin that allows targeting styles only when in phone-portrait display mode
@mixin phone-portrait {
  // This seems like a good breakpoint for portrait based on https://material.io/devices/
  // We can't use orientation:portrait because Android Chrome messes up when the keyboard is shown: https://www.chromestatus.com/feature/5656077370654720
  @media (max-width: 540px) {
    @content;
  }
}

// Position something directly below the header
@mixin below-header {
  top: var(--header-height);
}

// The tallest a "full screen" sheet should be
@mixin max-sheet-height {
  max-height: calc(var(--viewport-height) - var(--header-height) - 92px);
}

// A header for items or perks that matches the in-game display
@mixin destiny-header {
  text-transform: uppercase;
  font-weight: 600;
  font-family: Helvetica, Arial, sans-serif;
}

@mixin draggable-hover-border {
  outline: 1px solid #ddd;

  @include phone-portrait {
    outline: none;
  }
}

// Apply spacing between children
@mixin vertical-space-children($space) {
  > *:nth-last-child(n + 2) {
    margin-bottom: $space;
  }
}

// Apply spacing between children
@mixin horizontal-space-children($space) {
  > *:nth-last-child(n + 2) {
    margin-right: $space;
  }
}

// Emulate the gap property for flexbox. Not all browsers support it (notably
// iOS Safari < 14.5 and Chrome < 84). Use this instead of
// horizontal/vertical-space-children only if you'll have wrapping content.
@mixin flex-gap($gapRow, $gapColumn: $gapRow, $marginBottom: 0, $marginRight: 0) {
  margin-bottom: -1 * $gapRow + $marginBottom;
  margin-right: -1 * $gapColumn + $marginRight;
  > * {
    margin-bottom: $gapRow;
    margin-right: $gapColumn;
  }
}

// Show visible scrollbars when scrollable, even if the OS (e.g. macOS) prefers hidden scrollbars.
@mixin visible-scrollbars {
  &::-webkit-scrollbar-track {
    background: #555;
  }

  &::-webkit-scrollbar-thumb {
    background: #e4e4e4;
    border-radius: 3px;
  }

  &::-webkit-scrollbar {
    width: 10px;

    &:horizontal {
      height: 10px;
    }
  }
}
